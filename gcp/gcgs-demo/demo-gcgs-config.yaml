# Sample config from: https://agones.dev/site/docs/reference/fleet/
# the number of GameServers to keep Ready or Allocated
replicas: 5

# defines how GameServers are organised across the cluster.
# Options include:
# "Packed" (default) is aimed at dynamic Kubernetes clusters, such as cloud providers, wherein we want to bin pack
# resources
# "Distributed" is aimed at static Kubernetes clusters, wherein we want to distribute resources across the entire
# cluster
scheduling: Packed

strategy:
  # The replacement strategy for when the GameServer template is changed. Default option is "RollingUpdate",
  # "RollingUpdate" will increment by maxSurge value on each iteration, while decrementing by maxUnavailable on each
  # iteration, until all GameServers have been switched from one version to another.
  # "Recreate" terminates all non-allocated GameServers, and starts up a new set with the new details to replace them.
  type: RollingUpdate

  # Only relevant when `type: RollingUpdate`
  rollingUpdate:
    # the amount to increment the new GameServers by. Defaults to 25%
    maxSurge: 25%
    # the amount to decrements GameServers by. Defaults to 25%
    maxUnavailable: 25%

template:
  # GameServer metadata
  metadata:
    labels:
      gameName: udp-server
  spec:
    ports:
    - name: default
      portPolicy: Dynamic
      containerPort: 7654
      protocol: UDP
    health:
      initialDelaySeconds: 30
      periodSeconds: 60
    sdkServer:
      logLevel: Info
      grpcPort: 9357
      httpPort: 9358
    template:
      spec:
        containers:
        - name: dedicated
          image: gcr.io/agones-images/udp-server:0.21
          imagePullPolicy: Always
          resources:
            requests:
              memory: 200Mi
              cpu: 500m
            limits:
              memory: 200Mi
              cpu: 500m
